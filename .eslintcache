[{"/home/alec/swap-share/src/index.js":"1","/home/alec/swap-share/src/App.js":"2","/home/alec/swap-share/src/reportWebVitals.js":"3","/home/alec/swap-share/src/components/WalletButton.js":"4","/home/alec/swap-share/src/hooks/useWeb3Modal.js":"5","/home/alec/swap-share/src/components/index.js":"6","/home/alec/swap-share/src/components/BorrowRequest.js":"7","/home/alec/swap-share/src/components/SwapShare.js":"8","/home/alec/swap-share/src/Constants.js":"9","/home/alec/swap-share/src/components/OpenLoans.js":"10","/home/alec/swap-share/src/components/SplashPage.js":"11"},{"size":571,"mtime":1609368651983,"results":"12","hashOfConfig":"13"},{"size":3056,"mtime":1609789751256,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1608155728010,"results":"15","hashOfConfig":"13"},{"size":402,"mtime":1608235219011,"results":"16","hashOfConfig":"13"},{"size":1552,"mtime":1609704829370,"results":"17","hashOfConfig":"13"},{"size":1367,"mtime":1609797084422,"results":"18","hashOfConfig":"13"},{"size":4262,"mtime":1609797185190,"results":"19","hashOfConfig":"13"},{"size":8278,"mtime":1609797106926,"results":"20","hashOfConfig":"13"},{"size":128,"mtime":1609622169288,"results":"21","hashOfConfig":"13"},{"size":3653,"mtime":1609796984853,"results":"22","hashOfConfig":"13"},{"size":365,"mtime":1609788895508,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1yv57jw",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/alec/swap-share/src/index.js",[],["49","50"],"/home/alec/swap-share/src/App.js",["51"],"import React, { useEffect, useState } from 'react'\nimport Web3 from 'web3'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom'\n\nimport SwapShareABI from './abis/SwapShare.json'\nimport TestnetDAI from './abis/TestnetDAI.json'\n\nimport './App.css'\n\nimport { Header } from './components'\nimport SplashPage from './components/SplashPage'\nimport WalletButton from './components/WalletButton'\nimport SwapShare from './components/SwapShare'\nimport OpenLoans from './components/OpenLoans'\n\nimport useWeb3Modal from './hooks/useWeb3Modal'\n\n\nconst App = () => {\n  const [web3, setWeb3] = useState(null)\n  const [networkID, setNetworkID] = useState(null)\n  const [account, setAccount] = useState(null)\n  const [provider, loadWeb3Modal, logoutOfWeb3Modal] = useWeb3Modal()\n\n  const [swapShareContract, setSwapShareContract] = useState(null)\n  const [DAIContract, setDAIContract] = useState(null)\n\n  useEffect(() => {\n    if (provider != null) {\n      window.ethereum.autoRefreshOnNetworkChange = false\n\n      setNetworkID(window.ethereum.networkVersion)\n      window.ethereum.request({method: 'eth_requestAccounts'}).then((accounts) => {\n        setAccount(accounts[0])\n      })\n      setWeb3(new Web3(provider))\n    }\n  }, [provider])\n\n\n  useEffect(() => {\n    if (web3 != null) {\n      setSwapShareContract(new web3.eth.Contract(\n        SwapShareABI.abi,\n        SwapShareABI.networks[networkID].address\n      ))\n\n      setDAIContract(new web3.eth.Contract(\n        TestnetDAI.abi,\n        TestnetDAI.networks[networkID].address\n      ))\n    }\n  }, [web3])\n\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header>\n          <div className=\"ml-4\">\n            {web3 && swapShareContract && account &&\n              <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                <div style={{minWidth: '10rem'}}>\n                  <Link style={{color: 'white'}} to='/'>Your Activity</Link>\n                </div>\n                <div style={{minWidth: '5rem'}}>\n                  <Link style={{color: 'white'}} to='/open-loans'>View Open Loans</Link>\n                </div>\n              </div>\n            }\n          </div> \n  \n          <div style={{display: 'flex', alignItems: 'center'}}>\n            <div className=\"mr-2\">{account}</div>\n            <WalletButton provider={provider} loadWeb3Modal={loadWeb3Modal} logoutOfWeb3Modal={logoutOfWeb3Modal} />\n          </div>\n        </Header>\n        <Switch>\n          <Route path='/open-loans'>\n            {web3 && swapShareContract && account\n              ? <OpenLoans web3={web3} account={account} swapShareContract={swapShareContract} />\n              : <SplashPage />\n            } \n          </Route>\n          <Route path='/'>\n            {web3 && swapShareContract && account\n              ? <SwapShare web3={web3} account={account} swapShareContract={swapShareContract} DAIContract={DAIContract} />\n              : <SplashPage />\n            }\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App\n","/home/alec/swap-share/src/reportWebVitals.js",[],"/home/alec/swap-share/src/components/WalletButton.js",[],"/home/alec/swap-share/src/hooks/useWeb3Modal.js",["52"],"import { useEffect, useState } from \"react\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\n// Enter a valid infura key here to avoid being rate limited\n// You can get a key for free at https://infura.io/register\nconst INFURA_ID = \"INVALID_INFURA_KEY\";\n\nconst NETWORK_NAME = \"mainnet\";\n\nfunction useWeb3Modal(config = {}) {\n  const [web3Modal, setWeb3Modal] = useState();\n  const [provider, setProvider] = useState();\n  const { infuraId = INFURA_ID, NETWORK = NETWORK_NAME } = config;\n\n  useEffect(() => {\n    const modal = new Web3Modal({\n      network: NETWORK,\n      cacheProvider: true,\n      providerOptions: {\n        walletconnect: {\n          package: WalletConnectProvider,\n          options: {\n            infuraId,\n          },\n        },\n      },\n    })\n    setWeb3Modal(modal)\n  }, [])\n\n  // Open wallet selection modal.\n  const loadWeb3Modal = async () => {\n    let newProvider = null;\n    try {\n      newProvider = await web3Modal.connect();\n    } catch (error) {\n      // Modal was closed by user, we dont have to do anything\n    }\n\n    if (newProvider) {\n      setProvider(newProvider)\n    }\n  }\n\n  // Disconnect from wallet\n  const logoutOfWeb3Modal = async () => {\n    if (window.web3.currentProvider && window.web3.currentProvider.close) {\n      await window.web3.currentProvider.close();\n    }\n    web3Modal.clearCachedProvider();\n    window.location.reload();\n    setProvider(null);\n  }\n\n  return [provider, loadWeb3Modal, logoutOfWeb3Modal];\n}\n\nexport default useWeb3Modal;\n","/home/alec/swap-share/src/components/index.js",[],"/home/alec/swap-share/src/components/BorrowRequest.js",[],"/home/alec/swap-share/src/components/SwapShare.js",["53","54","55","56","57","58","59","60","61"],"/home/alec/swap-share/src/Constants.js",[],"/home/alec/swap-share/src/components/OpenLoans.js",["62","63"],"/home/alec/swap-share/src/components/SplashPage.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":58,"column":6,"nodeType":"70","endLine":58,"endColumn":12,"suggestions":"71"},{"ruleId":"68","severity":1,"message":"72","line":30,"column":6,"nodeType":"70","endLine":30,"endColumn":8,"suggestions":"73"},{"ruleId":"68","severity":1,"message":"74","line":22,"column":6,"nodeType":"70","endLine":22,"endColumn":22,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":25,"column":57,"nodeType":"78","messageId":"79","endLine":25,"endColumn":59},{"ruleId":"76","severity":1,"message":"77","line":31,"column":49,"nodeType":"78","messageId":"79","endLine":31,"endColumn":51},{"ruleId":"80","severity":1,"message":"81","line":42,"column":26,"nodeType":"82","messageId":"83","endLine":42,"endColumn":28},{"ruleId":"80","severity":1,"message":"81","line":70,"column":26,"nodeType":"82","messageId":"83","endLine":70,"endColumn":28},{"ruleId":"76","severity":1,"message":"77","line":186,"column":52,"nodeType":"78","messageId":"79","endLine":186,"endColumn":54},{"ruleId":"76","severity":1,"message":"77","line":187,"column":53,"nodeType":"78","messageId":"79","endLine":187,"endColumn":55},{"ruleId":"76","severity":1,"message":"77","line":190,"column":44,"nodeType":"78","messageId":"79","endLine":190,"endColumn":46},{"ruleId":"76","severity":1,"message":"77","line":193,"column":40,"nodeType":"78","messageId":"79","endLine":193,"endColumn":42},{"ruleId":"68","severity":1,"message":"84","line":13,"column":8,"nodeType":"70","endLine":13,"endColumn":10,"suggestions":"85"},{"ruleId":"80","severity":1,"message":"81","line":27,"column":30,"nodeType":"82","messageId":"83","endLine":27,"endColumn":32},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'networkID'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSwapShareContract' needs the current value of 'networkID'.","ArrayExpression",["88"],"React Hook useEffect has missing dependencies: 'NETWORK' and 'infuraId'. Either include them or remove the dependency array.",["89"],"React Hook useEffect has missing dependencies: 'getAddressBorrows' and 'getAddressFulfilledLoans'. Either include them or remove the dependency array.",["90"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'getAllOpenLoans'. Either include it or remove the dependency array.",["91"],"no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [networkID, web3]",{"range":"100","text":"101"},"Update the dependencies array to be: [NETWORK, infuraId]",{"range":"102","text":"103"},"Update the dependencies array to be: [getAddressBorrows, getAddressFulfilledLoans, updateRequests]",{"range":"104","text":"105"},"Update the dependencies array to be: [getAllOpenLoans]",{"range":"106","text":"107"},[1575,1581],"[networkID, web3]",[850,852],"[NETWORK, infuraId]",[675,691],"[getAddressBorrows, getAddressFulfilledLoans, updateRequests]",[349,351],"[getAllOpenLoans]"]