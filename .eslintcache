[{"/home/alec/swap-share/src/index.js":"1","/home/alec/swap-share/src/App.js":"2","/home/alec/swap-share/src/reportWebVitals.js":"3","/home/alec/swap-share/src/components/WalletButton.js":"4","/home/alec/swap-share/src/hooks/useWeb3Modal.js":"5","/home/alec/swap-share/src/components/index.js":"6","/home/alec/swap-share/src/components/BorrowRequest.js":"7","/home/alec/swap-share/src/components/SwapShare.js":"8","/home/alec/swap-share/src/Constants.js":"9","/home/alec/swap-share/src/components/OpenLoans.js":"10","/home/alec/swap-share/src/components/SplashPage.js":"11","/home/alec/swap-share/src/components/LoanCard.js":"12"},{"size":562,"mtime":1609961975746,"results":"13","hashOfConfig":"14"},{"size":3056,"mtime":1609800498462,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1608155728010,"results":"16","hashOfConfig":"14"},{"size":402,"mtime":1608235219011,"results":"17","hashOfConfig":"14"},{"size":1552,"mtime":1609704829370,"results":"18","hashOfConfig":"14"},{"size":1367,"mtime":1609962049131,"results":"19","hashOfConfig":"14"},{"size":4134,"mtime":1609962006319,"results":"20","hashOfConfig":"14"},{"size":6660,"mtime":1609960780156,"results":"21","hashOfConfig":"14"},{"size":128,"mtime":1609622169288,"results":"22","hashOfConfig":"14"},{"size":2753,"mtime":1609960789144,"results":"23","hashOfConfig":"14"},{"size":370,"mtime":1609800939415,"results":"24","hashOfConfig":"14"},{"size":1600,"mtime":1609961648653,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yv57jw",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/alec/swap-share/src/index.js",[],"/home/alec/swap-share/src/App.js",["53"],"import React, { useEffect, useState } from 'react'\nimport Web3 from 'web3'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom'\n\nimport SwapShareABI from './abis/SwapShare.json'\nimport TestnetDAI from './abis/TestnetDAI.json'\n\nimport './App.css'\n\nimport { Header } from './components'\nimport SplashPage from './components/SplashPage'\nimport WalletButton from './components/WalletButton'\nimport SwapShare from './components/SwapShare'\nimport OpenLoans from './components/OpenLoans'\n\nimport useWeb3Modal from './hooks/useWeb3Modal'\n\n\nconst App = () => {\n  const [web3, setWeb3] = useState(null)\n  const [networkID, setNetworkID] = useState(null)\n  const [account, setAccount] = useState(null)\n  const [provider, loadWeb3Modal, logoutOfWeb3Modal] = useWeb3Modal()\n\n  const [swapShareContract, setSwapShareContract] = useState(null)\n  const [DAIContract, setDAIContract] = useState(null)\n\n  useEffect(() => {\n    if (provider != null) {\n      window.ethereum.autoRefreshOnNetworkChange = false\n\n      setNetworkID(window.ethereum.networkVersion)\n      window.ethereum.request({method: 'eth_requestAccounts'}).then((accounts) => {\n        setAccount(accounts[0])\n      })\n      setWeb3(new Web3(provider))\n    }\n  }, [provider])\n\n\n  useEffect(() => {\n    if (web3 != null) {\n      setSwapShareContract(new web3.eth.Contract(\n        SwapShareABI.abi,\n        SwapShareABI.networks[networkID].address\n      ))\n\n      setDAIContract(new web3.eth.Contract(\n        TestnetDAI.abi,\n        TestnetDAI.networks[networkID].address\n      ))\n    }\n  }, [web3])\n\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header>\n          <div className=\"ml-4\">\n            {web3 && swapShareContract && account &&\n              <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                <div style={{minWidth: '10rem'}}>\n                  <Link style={{color: 'white'}} to='/'>Your Activity</Link>\n                </div>\n                <div style={{minWidth: '5rem'}}>\n                  <Link style={{color: 'white'}} to='/open-loans'>View Open Loans</Link>\n                </div>\n              </div>\n            }\n          </div> \n  \n          <div style={{display: 'flex', alignItems: 'center'}}>\n            <div className=\"mr-4\">{account}</div>\n            <WalletButton provider={provider} loadWeb3Modal={loadWeb3Modal} logoutOfWeb3Modal={logoutOfWeb3Modal} />\n          </div>\n        </Header>\n        <Switch>\n          <Route path='/open-loans'>\n            {web3 && swapShareContract && account\n              ? <OpenLoans web3={web3} account={account} swapShareContract={swapShareContract} />\n              : <SplashPage />\n            } \n          </Route>\n          <Route path='/'>\n            {web3 && swapShareContract && account\n              ? <SwapShare web3={web3} account={account} swapShareContract={swapShareContract} DAIContract={DAIContract} />\n              : <SplashPage />\n            }\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App\n",["54","55"],"/home/alec/swap-share/src/reportWebVitals.js",[],"/home/alec/swap-share/src/components/WalletButton.js",[],"/home/alec/swap-share/src/hooks/useWeb3Modal.js",["56"],"import { useEffect, useState } from \"react\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\n// Enter a valid infura key here to avoid being rate limited\n// You can get a key for free at https://infura.io/register\nconst INFURA_ID = \"INVALID_INFURA_KEY\";\n\nconst NETWORK_NAME = \"mainnet\";\n\nfunction useWeb3Modal(config = {}) {\n  const [web3Modal, setWeb3Modal] = useState();\n  const [provider, setProvider] = useState();\n  const { infuraId = INFURA_ID, NETWORK = NETWORK_NAME } = config;\n\n  useEffect(() => {\n    const modal = new Web3Modal({\n      network: NETWORK,\n      cacheProvider: true,\n      providerOptions: {\n        walletconnect: {\n          package: WalletConnectProvider,\n          options: {\n            infuraId,\n          },\n        },\n      },\n    })\n    setWeb3Modal(modal)\n  }, [])\n\n  // Open wallet selection modal.\n  const loadWeb3Modal = async () => {\n    let newProvider = null;\n    try {\n      newProvider = await web3Modal.connect();\n    } catch (error) {\n      // Modal was closed by user, we dont have to do anything\n    }\n\n    if (newProvider) {\n      setProvider(newProvider)\n    }\n  }\n\n  // Disconnect from wallet\n  const logoutOfWeb3Modal = async () => {\n    if (window.web3.currentProvider && window.web3.currentProvider.close) {\n      await window.web3.currentProvider.close();\n    }\n    web3Modal.clearCachedProvider();\n    window.location.reload();\n    setProvider(null);\n  }\n\n  return [provider, loadWeb3Modal, logoutOfWeb3Modal];\n}\n\nexport default useWeb3Modal;\n","/home/alec/swap-share/src/components/index.js",[],"/home/alec/swap-share/src/components/BorrowRequest.js",[],"/home/alec/swap-share/src/components/SwapShare.js",["57","58","59","60","61","62","63","64","65"],"/home/alec/swap-share/src/Constants.js",[],"/home/alec/swap-share/src/components/OpenLoans.js",["66","67"],"/home/alec/swap-share/src/components/SplashPage.js",[],"/home/alec/swap-share/src/components/LoanCard.js",[],{"ruleId":"68","severity":1,"message":"69","line":58,"column":6,"nodeType":"70","endLine":58,"endColumn":12,"suggestions":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"68","severity":1,"message":"76","line":30,"column":6,"nodeType":"70","endLine":30,"endColumn":8,"suggestions":"77"},{"ruleId":"68","severity":1,"message":"78","line":22,"column":6,"nodeType":"70","endLine":22,"endColumn":22,"suggestions":"79"},{"ruleId":"80","severity":1,"message":"81","line":25,"column":57,"nodeType":"82","messageId":"83","endLine":25,"endColumn":59},{"ruleId":"80","severity":1,"message":"81","line":31,"column":49,"nodeType":"82","messageId":"83","endLine":31,"endColumn":51},{"ruleId":"84","severity":1,"message":"85","line":42,"column":26,"nodeType":"86","messageId":"87","endLine":42,"endColumn":28},{"ruleId":"84","severity":1,"message":"85","line":70,"column":26,"nodeType":"86","messageId":"87","endLine":70,"endColumn":28},{"ruleId":"80","severity":1,"message":"81","line":163,"column":52,"nodeType":"82","messageId":"83","endLine":163,"endColumn":54},{"ruleId":"80","severity":1,"message":"81","line":164,"column":53,"nodeType":"82","messageId":"83","endLine":164,"endColumn":55},{"ruleId":"80","severity":1,"message":"81","line":167,"column":44,"nodeType":"82","messageId":"83","endLine":167,"endColumn":46},{"ruleId":"80","severity":1,"message":"81","line":170,"column":40,"nodeType":"82","messageId":"83","endLine":170,"endColumn":42},{"ruleId":"68","severity":1,"message":"88","line":13,"column":8,"nodeType":"70","endLine":13,"endColumn":10,"suggestions":"89"},{"ruleId":"84","severity":1,"message":"85","line":27,"column":30,"nodeType":"86","messageId":"87","endLine":27,"endColumn":32},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'networkID'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSwapShareContract' needs the current value of 'networkID'.","ArrayExpression",["90"],"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"React Hook useEffect has missing dependencies: 'NETWORK' and 'infuraId'. Either include them or remove the dependency array.",["93"],"React Hook useEffect has missing dependencies: 'getAddressBorrows' and 'getAddressFulfilledLoans'. Either include them or remove the dependency array.",["94"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'getAllOpenLoans'. Either include it or remove the dependency array.",["95"],{"desc":"96","fix":"97"},"no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},"Update the dependencies array to be: [networkID, web3]",{"range":"104","text":"105"},"Update the dependencies array to be: [NETWORK, infuraId]",{"range":"106","text":"107"},"Update the dependencies array to be: [getAddressBorrows, getAddressFulfilledLoans, updateRequests]",{"range":"108","text":"109"},"Update the dependencies array to be: [getAllOpenLoans]",{"range":"110","text":"111"},[1575,1581],"[networkID, web3]",[850,852],"[NETWORK, infuraId]",[669,685],"[getAddressBorrows, getAddressFulfilledLoans, updateRequests]",[343,345],"[getAllOpenLoans]"]