[{"/home/alec/swap-share/src/index.js":"1","/home/alec/swap-share/src/App.js":"2","/home/alec/swap-share/src/reportWebVitals.js":"3","/home/alec/swap-share/src/components/WalletButton.js":"4","/home/alec/swap-share/src/hooks/useWeb3Modal.js":"5","/home/alec/swap-share/src/components/index.js":"6","/home/alec/swap-share/src/components/BorrowRequest.js":"7","/home/alec/swap-share/src/components/SwapShare.js":"8","/home/alec/swap-share/src/Constants.js":"9","/home/alec/swap-share/src/components/OpenLoans.js":"10","/home/alec/swap-share/src/components/SplashPage.js":"11","/home/alec/swap-share/src/components/LoanCard.js":"12"},{"size":517,"mtime":1610060843406,"results":"13","hashOfConfig":"14"},{"size":3977,"mtime":1610060558213,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1608155728010,"results":"16","hashOfConfig":"14"},{"size":402,"mtime":1608235219011,"results":"17","hashOfConfig":"14"},{"size":1552,"mtime":1609992311231,"results":"18","hashOfConfig":"14"},{"size":1542,"mtime":1609992252930,"results":"19","hashOfConfig":"14"},{"size":7254,"mtime":1610140557031,"results":"20","hashOfConfig":"14"},{"size":8271,"mtime":1610209501184,"results":"21","hashOfConfig":"14"},{"size":481,"mtime":1610140659475,"results":"22","hashOfConfig":"14"},{"size":3561,"mtime":1610209442304,"results":"23","hashOfConfig":"14"},{"size":370,"mtime":1609973857836,"results":"24","hashOfConfig":"14"},{"size":2820,"mtime":1610209218172,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1yv57jw",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/alec/swap-share/src/index.js",[],["54","55"],"/home/alec/swap-share/src/App.js",["56","57"],"import React, { useEffect, useState } from 'react'\nimport Web3 from 'web3'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom'\n\nimport SwapShareABI from './abis/SwapShare.json'\nimport TestnetDAI from './abis/TestnetDAI.json'\n\nimport './App.css'\n\nimport { METAMASK_NETWORKS } from './Constants'\n\nimport { Header, WrongNetHeader } from './components'\nimport SplashPage from './components/SplashPage'\nimport WalletButton from './components/WalletButton'\nimport SwapShare from './components/SwapShare'\nimport OpenLoans from './components/OpenLoans'\n\nimport useWeb3Modal from './hooks/useWeb3Modal'\n\n\nconst App = () => {\n  const [web3, setWeb3] = useState(null)\n  const [networkID, setNetworkID] = useState(null)\n  const [account, setAccount] = useState(null)\n  const [provider, loadWeb3Modal, logoutOfWeb3Modal] = useWeb3Modal()\n\n  const [swapShareContract, setSwapShareContract] = useState(null)\n  const [DAIContract, setDAIContract] = useState(null)\n\n  const [isCorrectNetwork, setIsCorrectNetwork] = useState(true)\n  const [isConnected, setIsConnected] = useState(false)\n\n  useEffect(() => {\n    setIsCorrectNetwork(METAMASK_NETWORKS.ganache == window.ethereum.networkVersion)\n\n    window.ethereum.on('chainChanged', (_chainId) => window.location.reload())\n    window.ethereum.on('accountsChanged', (accounts) => {\n      setAccount(accounts[0])\n    })\n\n  }, [])\n\n  useEffect(() => {\n    if (provider != null) {\n      window.ethereum.autoRefreshOnNetworkChange = false\n\n      setNetworkID(window.ethereum.networkVersion)\n      window.ethereum.request({method: 'eth_requestAccounts'}).then((accounts) => {\n        setAccount(accounts[0])\n      })\n      setWeb3(new Web3(provider))\n    }\n  }, [provider])\n\n\n  useEffect(() => {\n    if (web3 != null) {\n      setIsConnected(true)\n\n      setSwapShareContract(new web3.eth.Contract(\n        SwapShareABI.abi,\n        SwapShareABI.networks[networkID].address\n      ))\n\n      setDAIContract(new web3.eth.Contract(\n        TestnetDAI.abi,\n        TestnetDAI.networks[networkID].address\n      ))\n    }\n  }, [web3])\n\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <div>\n          {isCorrectNetwork \n            ? <Header>\n                <div className=\"ml-4\">\n                  {web3 && swapShareContract && account &&\n                    <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                      <div style={{minWidth: '10rem'}}>\n                        <Link style={{color: 'white'}} to='/'>Your Activity</Link>\n                      </div>\n                      <div style={{minWidth: '5rem'}}>\n                        <Link style={{color: 'white'}} to='/open-loans'>View Open Loans</Link>\n                      </div>\n                    </div>\n                  }\n                </div> \n        \n                <div style={{display: 'flex', alignItems: 'center'}}>\n                  {isConnected && <div className=\"mr-4\">{account}</div>}\n                  <WalletButton \n                    provider={provider} \n                    loadWeb3Modal={loadWeb3Modal}\n                    logoutOfWeb3Modal={logoutOfWeb3Modal} />\n                </div>\n              </Header>\n            : <WrongNetHeader>\n                <div>Swap Share is currently only available on the Rinkeby Testnet</div>\n              </WrongNetHeader>\n          }\n        </div>\n        <Switch>\n          <Route path='/open-loans'>\n            {web3 && swapShareContract && account\n              ? <OpenLoans web3={web3} account={account} swapShareContract={swapShareContract} />\n              : <SplashPage />\n            } \n          </Route>\n          <Route path='/'>\n            {web3 && swapShareContract && account\n              ? <SwapShare web3={web3} account={account} swapShareContract={swapShareContract} DAIContract={DAIContract} />\n              : <SplashPage />\n            }\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App\n","/home/alec/swap-share/src/reportWebVitals.js",[],"/home/alec/swap-share/src/components/WalletButton.js",[],"/home/alec/swap-share/src/hooks/useWeb3Modal.js",["58"],"import { useEffect, useState } from \"react\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\n// Enter a valid infura key here to avoid being rate limited\n// You can get a key for free at https://infura.io/register\nconst INFURA_ID = \"INVALID_INFURA_KEY\";\n\nconst NETWORK_NAME = \"mainnet\";\n\nfunction useWeb3Modal(config = {}) {\n  const [web3Modal, setWeb3Modal] = useState();\n  const [provider, setProvider] = useState();\n  const { infuraId = INFURA_ID, NETWORK = NETWORK_NAME } = config;\n\n  useEffect(() => {\n    const modal = new Web3Modal({\n      network: NETWORK,\n      cacheProvider: true,\n      providerOptions: {\n        walletconnect: {\n          package: WalletConnectProvider,\n          options: {\n            infuraId,\n          },\n        },\n      },\n    })\n    setWeb3Modal(modal)\n  }, [])\n\n  // Open wallet selection modal.\n  const loadWeb3Modal = async () => {\n    let newProvider = null;\n    try {\n      newProvider = await web3Modal.connect();\n    } catch (error) {\n      // Modal was closed by user, we dont have to do anything\n    }\n\n    if (newProvider) {\n      setProvider(newProvider)\n    }\n  }\n\n  // Disconnect from wallet\n  const logoutOfWeb3Modal = async () => {\n    if (window.web3.currentProvider && window.web3.currentProvider.close) {\n      await window.web3.currentProvider.close();\n    }\n    web3Modal.clearCachedProvider();\n    window.location.reload();\n    setProvider(null);\n  }\n\n  return [provider, loadWeb3Modal, logoutOfWeb3Modal];\n}\n\nexport default useWeb3Modal;\n","/home/alec/swap-share/src/components/index.js",[],"/home/alec/swap-share/src/components/BorrowRequest.js",["59","60","61","62","63"],"import React, { useState, useEffect, useRef } from 'react'\nimport flatpickr from \"flatpickr\"\nimport BigNumber from \"bignumber.js\"\n\nimport { Title } from './index'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst BorrowRequest = ({ account, swapShareContract, daiContract, setUpdateRequests }) => {\n    const [validated, setValidated] = useState(false)\n    const [approved, setApproved] = useState(false)\n    const approvalAmount = new BigNumber('1000e+18').toFixed()\n\n    const inputRef = useRef(null)\n\n    const [daiAmount, setDaiAmount] = useState('')\n    const [ethAmount, setEthAmount] = useState('')\n    const [expirationTimeDelta, setExpirationTimeDelta] = useState(null)\n    const [loanDuration, setLoanDuration] = useState({\n                                                days:    '0',\n                                                hours:   '0',\n                                                minutes: '0'\n                                            })\n    const [interestRate, setInterestRate] = useState('3')\n\n\n    // useEffect(() => {\n    //     flatpickr(inputRef.current, {\n    //         enableTime: true,\n    //         dateFormat: \"M d, Y  h:i K\",\n    //         defaultDate: \"today\",\n    //         minDate: \"today\",\n    //         onChange: (date) => {\n    //             let utcTimestamp = date[0].getTime() / 1000\n    //             setExpirationDate(utcTimestamp)\n    //         } \n    //     })\n    // }, [])\n\n    useEffect(() => {\n        let now = new Date()\n        let timeDelta = new Date()\n        timeDelta.setDate(timeDelta.getDate() + parseInt(loanDuration.days))\n        timeDelta.setHours(timeDelta.getHours() + parseInt(loanDuration.hours))\n        timeDelta.setMinutes(timeDelta.getMinutes() + parseInt(loanDuration.minutes))\n\n        let expirationDelta = parseInt((timeDelta.getTime() / 1000) - (now.getTime() / 1000))\n\n        setExpirationTimeDelta(expirationDelta)\n    }, [loanDuration])\n\n    const handleSubmit = (event) => {\n        const form = event.currentTarget;\n\n        if (form.checkValidity() === false) {\n          event.stopPropagation();\n        } else {\n            setValidated(true);\n            submitBorrowRequest()\n        }\n\n        event.preventDefault()\n      };\n\n    const handleChange = setFunc => e => {\n        setFunc(e.target.value)\n    }\n\n    function submitBorrowRequest() {\n        let amountToSend = new BigNumber(`${daiAmount}e+18`).toFixed()\n        let ethRequested = new BigNumber(`${ethAmount}e+18`).toFixed()\n\n        if (approved) {\n            sendDAI(expirationTimeDelta, amountToSend, ethRequested, interestRate)\n        } else {\n            daiContract.methods\n            .approve(swapShareContract._address, approvalAmount)\n            .send({from: account})\n            .then(() => {\n                setApproved(true)\n                sendDAI(expirationTimeDelta, amountToSend, ethRequested, interestRate)\n            })\n            .catch(e => console.error(e))\n        }\n    }\n\n    function sendDAI(expiration, amount, ethRequested, interestRate) {\n        swapShareContract.methods\n            .requestLoan(expiration, amount, ethRequested, interestRate)\n            .send({from: account})\n            .then(() => setUpdateRequests(true))\n    }\n\n    return (\n        <Form noValidate validated={validated} onSubmit={handleSubmit} style={{display: 'flex', flexDirection: 'column'}}>\n            <Form.Label>\n                <Title>Create a Borrow Request</Title>\n            </Form.Label>\n\n            <Form.Group>\n                <Form.Text className=\"text-muted mb-2\" style={{fontSize: '1.1rem'}}>ETH to request</Form.Text>\n                <Form.Control placeholder=\"ETH amount\" value={ethAmount} onChange={handleChange(setEthAmount)} required />\n                <Form.Control.Feedback type=\"invalid\">\n                    Please specify ETH.\n                </Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Text className=\"text-muted mb-2\" style={{fontSize: '1.1rem'}}>DAI to store as collateral</Form.Text>\n                <Form.Control placeholder=\"DAI amount\" value={daiAmount} onChange={handleChange(setDaiAmount)} required />\n                <Form.Control.Feedback type=\"invalid\">\n                    Please specify DAI.\n                </Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Text className=\"text-muted mb-2\" style={{fontSize: '1.1rem'}}>Interest rate that you will borrow at: {interestRate}%</Form.Text>\n                <Form.Control value={interestRate} onChange={handleChange(setInterestRate)} type=\"range\" min=\"1\" max=\"20\" required />\n            </Form.Group>\n\n            {/* <Form.Group>\n                <Form.Text className=\"text-muted mb-2\" style={{fontSize: '1.1rem'}}>Date and time that loan must be paid by</Form.Text>\n                <Form.Control type=\"date\" ref={inputRef} />\n            </Form.Group> */}\n\n            <Form.Group>\n                <Form.Text className=\"text-muted mb-2\" style={{fontSize: '1.1rem'}}>Duration of loan before expiration</Form.Text>\n                <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                    <div style={{width: '6rem'}}>   \n                        <Form.Control \n                            style={{textAlign: 'center'}} \n                            placeholder=\"0\"\n                            value={loanDuration.days} \n                            onChange={e => {\n                                let days = e.target.value == '' ? '0' : e.target.value\n                                setLoanDuration({...loanDuration, days: days})\n                            }}\n                            required />\n                        <Form.Text style={{textAlign: 'center'}}>Days</Form.Text>\n                    </div>\n                    <div style={{width: '6rem'}}>   \n                        <Form.Control \n                            style={{textAlign: 'center'}} \n                            value={loanDuration.hours} \n                            onChange={e => {\n                                let hours = e.target.value == '' ? '0' : e.target.value\n                                setLoanDuration({...loanDuration, hours: hours})\n                            }}\n                            required />\n                        <Form.Text style={{textAlign: 'center'}}>Hours</Form.Text>\n                    </div>\n                    <div style={{width: '6rem'}}>   \n                        <Form.Control \n                            style={{textAlign: 'center'}} \n                            value={loanDuration.minutes} \n                            onChange={e => {\n                                let minutes = e.target.value == '' ? '0' : e.target.value\n                                setLoanDuration({...loanDuration, minutes: minutes})\n                            }}\n                            required />\n                        <Form.Text style={{textAlign: 'center'}}>Minutes</Form.Text>\n                    </div>\n                </div>\n            </Form.Group>\n\n            <Button className=\"mt-4\" variant=\"light\" type=\"submit\">Submit</Button>\n        </Form>\n    );\n  }\n\nexport default BorrowRequest","/home/alec/swap-share/src/components/SwapShare.js",["64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79"],"/home/alec/swap-share/src/Constants.js",[],"/home/alec/swap-share/src/components/OpenLoans.js",["80","81","82","83","84"],"/home/alec/swap-share/src/components/SplashPage.js",[],"/home/alec/swap-share/src/components/LoanCard.js",["85","86"],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":39,"column":51,"nodeType":"93","messageId":"94","endLine":39,"endColumn":53},{"ruleId":"95","severity":1,"message":"96","line":75,"column":6,"nodeType":"97","endLine":75,"endColumn":12,"suggestions":"98"},{"ruleId":"95","severity":1,"message":"99","line":30,"column":6,"nodeType":"97","endLine":30,"endColumn":8,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":2,"column":8,"nodeType":"103","messageId":"104","endLine":2,"endColumn":17},{"ruleId":"101","severity":1,"message":"105","line":15,"column":11,"nodeType":"103","messageId":"104","endLine":15,"endColumn":19},{"ruleId":"91","severity":1,"message":"92","line":136,"column":59,"nodeType":"93","messageId":"94","endLine":136,"endColumn":61},{"ruleId":"91","severity":1,"message":"92","line":147,"column":60,"nodeType":"93","messageId":"94","endLine":147,"endColumn":62},{"ruleId":"91","severity":1,"message":"92","line":158,"column":62,"nodeType":"93","messageId":"94","endLine":158,"endColumn":64},{"ruleId":"95","severity":1,"message":"106","line":24,"column":6,"nodeType":"97","endLine":24,"endColumn":15,"suggestions":"107"},{"ruleId":"95","severity":1,"message":"108","line":32,"column":6,"nodeType":"97","endLine":32,"endColumn":22,"suggestions":"109"},{"ruleId":"91","severity":1,"message":"92","line":35,"column":57,"nodeType":"93","messageId":"94","endLine":35,"endColumn":59},{"ruleId":"91","severity":1,"message":"92","line":41,"column":49,"nodeType":"93","messageId":"94","endLine":41,"endColumn":51},{"ruleId":"110","severity":1,"message":"111","line":52,"column":26,"nodeType":"112","messageId":"113","endLine":52,"endColumn":28},{"ruleId":"91","severity":1,"message":"92","line":68,"column":49,"nodeType":"93","messageId":"94","endLine":68,"endColumn":51},{"ruleId":"91","severity":1,"message":"92","line":69,"column":49,"nodeType":"93","messageId":"94","endLine":69,"endColumn":51},{"ruleId":"91","severity":1,"message":"92","line":76,"column":45,"nodeType":"93","messageId":"94","endLine":76,"endColumn":47},{"ruleId":"110","severity":1,"message":"111","line":90,"column":26,"nodeType":"112","messageId":"113","endLine":90,"endColumn":28},{"ruleId":"91","severity":1,"message":"92","line":106,"column":49,"nodeType":"93","messageId":"94","endLine":106,"endColumn":51},{"ruleId":"91","severity":1,"message":"92","line":107,"column":49,"nodeType":"93","messageId":"94","endLine":107,"endColumn":51},{"ruleId":"91","severity":1,"message":"92","line":114,"column":45,"nodeType":"93","messageId":"94","endLine":114,"endColumn":47},{"ruleId":"91","severity":1,"message":"92","line":193,"column":50,"nodeType":"93","messageId":"94","endLine":193,"endColumn":52},{"ruleId":"91","severity":1,"message":"92","line":194,"column":51,"nodeType":"93","messageId":"94","endLine":194,"endColumn":53},{"ruleId":"91","severity":1,"message":"92","line":197,"column":42,"nodeType":"93","messageId":"94","endLine":197,"endColumn":44},{"ruleId":"91","severity":1,"message":"92","line":200,"column":38,"nodeType":"93","messageId":"94","endLine":200,"endColumn":40},{"ruleId":"95","severity":1,"message":"114","line":15,"column":8,"nodeType":"97","endLine":15,"endColumn":17,"suggestions":"115"},{"ruleId":"110","severity":1,"message":"111","line":29,"column":30,"nodeType":"112","messageId":"113","endLine":29,"endColumn":32},{"ruleId":"91","severity":1,"message":"92","line":45,"column":53,"nodeType":"93","messageId":"94","endLine":45,"endColumn":55},{"ruleId":"91","severity":1,"message":"92","line":46,"column":53,"nodeType":"93","messageId":"94","endLine":46,"endColumn":55},{"ruleId":"91","severity":1,"message":"92","line":53,"column":49,"nodeType":"93","messageId":"94","endLine":53,"endColumn":51},{"ruleId":"91","severity":1,"message":"92","line":41,"column":37,"nodeType":"93","messageId":"94","endLine":41,"endColumn":39},{"ruleId":"91","severity":1,"message":"92","line":52,"column":37,"nodeType":"93","messageId":"94","endLine":52,"endColumn":39},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'networkID'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSwapShareContract' needs the current value of 'networkID'.","ArrayExpression",["118"],"React Hook useEffect has missing dependencies: 'NETWORK' and 'infuraId'. Either include them or remove the dependency array.",["119"],"no-unused-vars","'flatpickr' is defined but never used.","Identifier","unusedVar","'inputRef' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAddressBorrows', 'getAddressFulfilledLoans', and 'updateRequests'. Either include them or remove the dependency array.",["120"],"React Hook useEffect has missing dependencies: 'getAddressBorrows' and 'getAddressFulfilledLoans'. Either include them or remove the dependency array.",["121"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'getAllOpenLoans'. Either include it or remove the dependency array.",["122"],"no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},"Update the dependencies array to be: [networkID, web3]",{"range":"133","text":"134"},"Update the dependencies array to be: [NETWORK, infuraId]",{"range":"135","text":"136"},"Update the dependencies array to be: [account, getAddressBorrows, getAddressFulfilledLoans, updateRequests]",{"range":"137","text":"138"},"Update the dependencies array to be: [getAddressBorrows, getAddressFulfilledLoans, updateRequests]",{"range":"139","text":"140"},"Update the dependencies array to be: [account, getAllOpenLoans]",{"range":"141","text":"142"},[2081,2087],"[networkID, web3]",[850,852],"[NETWORK, infuraId]",[752,761],"[account, getAddressBorrows, getAddressFulfilledLoans, updateRequests]",[911,927],"[getAddressBorrows, getAddressFulfilledLoans, updateRequests]",[440,449],"[account, getAllOpenLoans]"]