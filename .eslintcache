[{"/home/alec/swap-share/src/index.js":"1","/home/alec/swap-share/src/App.js":"2","/home/alec/swap-share/src/reportWebVitals.js":"3","/home/alec/swap-share/src/components/WalletButton.js":"4","/home/alec/swap-share/src/hooks/useWeb3Modal.js":"5","/home/alec/swap-share/src/components/index.js":"6","/home/alec/swap-share/src/components/BorrowRequest.js":"7","/home/alec/swap-share/src/components/SwapShare.js":"8","/home/alec/swap-share/src/Constants.js":"9"},{"size":571,"mtime":1609368651983,"results":"10","hashOfConfig":"11"},{"size":2117,"mtime":1609619475360,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1608155728010,"results":"13","hashOfConfig":"11"},{"size":402,"mtime":1608235219011,"results":"14","hashOfConfig":"11"},{"size":1420,"mtime":1608789385191,"results":"15","hashOfConfig":"11"},{"size":1246,"mtime":1609535193629,"results":"16","hashOfConfig":"11"},{"size":4231,"mtime":1609621098815,"results":"17","hashOfConfig":"11"},{"size":6622,"mtime":1609625114494,"results":"18","hashOfConfig":"11"},{"size":128,"mtime":1609622169288,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1yv57jw",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/alec/swap-share/src/index.js",[],["40","41"],"/home/alec/swap-share/src/App.js",["42"],"import React, { useEffect, useState } from 'react'\nimport Web3 from 'web3'\n\nimport SwapShareABI from './abis/SwapShare.json'\nimport TestnetDAI from './abis/TestnetDAI.json'\n\nimport './App.css'\nimport logo from './logo.svg'\n\nimport { Header, Splash } from './components'\nimport WalletButton from './components/WalletButton'\nimport SwapShare from './components/SwapShare'\n\nimport useWeb3Modal from './hooks/useWeb3Modal'\n\n\nconst App = () => {\n  const [web3, setWeb3] = useState(null)\n  const [networkID, setNetworkID] = useState(null)\n  const [account, setAccount] = useState(null)\n  const [provider, loadWeb3Modal, logoutOfWeb3Modal] = useWeb3Modal()\n\n  const [swapShareContract, setSwapShareContract] = useState(null)\n  const [DAIContract, setDAIContract] = useState(null)\n\n  useEffect(() => {\n    if (provider != null) {\n      window.ethereum.autoRefreshOnNetworkChange = false\n\n      setNetworkID(window.ethereum.networkVersion)\n      window.ethereum.request({method: 'eth_requestAccounts'}).then((accounts) => {\n        setAccount(accounts[0])\n      })\n      setWeb3(new Web3(provider))\n    }\n  }, [provider])\n\n\n  useEffect(() => {\n    if (web3 != null) {\n      setSwapShareContract(new web3.eth.Contract(\n        SwapShareABI.abi,\n        SwapShareABI.networks[networkID].address\n      ))\n\n      setDAIContract(new web3.eth.Contract(\n        TestnetDAI.abi,\n        TestnetDAI.networks[networkID].address\n      ))\n    }\n  }, [web3])\n\n\n  return (\n    <div className=\"App\">\n      <Header>\n        <div className=\"mr-2\">{account}</div>\n        <WalletButton provider={provider} loadWeb3Modal={loadWeb3Modal} logoutOfWeb3Modal={logoutOfWeb3Modal} />\n      </Header>\n      {web3 && swapShareContract && account\n        ? <SwapShare web3={web3} account={account} swapShareContract={swapShareContract} DAIContract={DAIContract} />\n        : <Splash>\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <div style={{fontSize: '2rem'}}>SwapShare</div>\n            <div>An anonymous, direct peer-to-peer crypto lending service</div>\n          </Splash>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","/home/alec/swap-share/src/reportWebVitals.js",[],"/home/alec/swap-share/src/components/WalletButton.js",[],"/home/alec/swap-share/src/hooks/useWeb3Modal.js",[],"/home/alec/swap-share/src/components/index.js",[],"/home/alec/swap-share/src/components/BorrowRequest.js",["43"],"/home/alec/swap-share/src/components/SwapShare.js",["44","45","46","47","48","49","50","51","52","53"],"/home/alec/swap-share/src/Constants.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":51,"column":6,"nodeType":"60","endLine":51,"endColumn":12,"suggestions":"61"},{"ruleId":"62","severity":1,"message":"63","line":96,"column":25,"nodeType":"64","messageId":"65","endLine":96,"endColumn":32},{"ruleId":"66","severity":1,"message":"67","line":12,"column":10,"nodeType":"68","messageId":"69","endLine":12,"endColumn":24},{"ruleId":"66","severity":1,"message":"70","line":12,"column":26,"nodeType":"68","messageId":"69","endLine":12,"endColumn":43},{"ruleId":"58","severity":1,"message":"71","line":23,"column":6,"nodeType":"60","endLine":23,"endColumn":22,"suggestions":"72"},{"ruleId":"73","severity":1,"message":"74","line":26,"column":57,"nodeType":"75","messageId":"65","endLine":26,"endColumn":59},{"ruleId":"73","severity":1,"message":"74","line":32,"column":43,"nodeType":"75","messageId":"65","endLine":32,"endColumn":45},{"ruleId":"76","severity":1,"message":"77","line":43,"column":26,"nodeType":"78","messageId":"79","endLine":43,"endColumn":28},{"ruleId":"76","severity":1,"message":"77","line":69,"column":26,"nodeType":"78","messageId":"79","endLine":69,"endColumn":28},{"ruleId":"73","severity":1,"message":"74","line":162,"column":52,"nodeType":"75","messageId":"65","endLine":162,"endColumn":54},{"ruleId":"73","severity":1,"message":"74","line":163,"column":53,"nodeType":"75","messageId":"65","endLine":163,"endColumn":55},{"ruleId":"73","severity":1,"message":"74","line":166,"column":42,"nodeType":"75","messageId":"65","endLine":166,"endColumn":44},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'networkID'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSwapShareContract' needs the current value of 'networkID'.","ArrayExpression",["82"],"no-dupe-keys","Duplicate key 'minDate'.","ObjectExpression","unexpected","no-unused-vars","'fulfilledLoans' is assigned a value but never used.","Identifier","unusedVar","'setFulfilledLoans' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAddressBorrows' and 'getAllRequests'. Either include them or remove the dependency array.",["83"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},"Update the dependencies array to be: [networkID, web3]",{"range":"88","text":"89"},"Update the dependencies array to be: [getAddressBorrows, getAllRequests, updateRequests]",{"range":"90","text":"91"},[1429,1435],"[networkID, web3]",[713,729],"[getAddressBorrows, getAllRequests, updateRequests]"]