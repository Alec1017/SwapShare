[{"/home/alec/swap-share/src/index.js":"1","/home/alec/swap-share/src/App.js":"2","/home/alec/swap-share/src/reportWebVitals.js":"3","/home/alec/swap-share/src/components/WalletButton.js":"4","/home/alec/swap-share/src/hooks/useWeb3Modal.js":"5","/home/alec/swap-share/src/components/index.js":"6","/home/alec/swap-share/src/components/BorrowRequest.js":"7","/home/alec/swap-share/src/components/SwapShare.js":"8","/home/alec/swap-share/src/Constants.js":"9","/home/alec/swap-share/src/components/OpenLoans.js":"10","/home/alec/swap-share/src/components/SplashPage.js":"11","/home/alec/swap-share/src/components/LoanCard.js":"12"},{"size":562,"mtime":1609975963215,"results":"13","hashOfConfig":"14"},{"size":3056,"mtime":1609800498462,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1608155728010,"results":"16","hashOfConfig":"14"},{"size":402,"mtime":1608235219011,"results":"17","hashOfConfig":"14"},{"size":1552,"mtime":1609704829370,"results":"18","hashOfConfig":"14"},{"size":1347,"mtime":1609978793482,"results":"19","hashOfConfig":"14"},{"size":4270,"mtime":1609977733141,"results":"20","hashOfConfig":"14"},{"size":6674,"mtime":1609977912567,"results":"21","hashOfConfig":"14"},{"size":128,"mtime":1609622169288,"results":"22","hashOfConfig":"14"},{"size":2682,"mtime":1609974041913,"results":"23","hashOfConfig":"14"},{"size":370,"mtime":1609973857836,"results":"24","hashOfConfig":"14"},{"size":1601,"mtime":1609978808266,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1yv57jw",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/alec/swap-share/src/index.js",[],["54","55"],"/home/alec/swap-share/src/App.js",["56"],"import React, { useEffect, useState } from 'react'\nimport Web3 from 'web3'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom'\n\nimport SwapShareABI from './abis/SwapShare.json'\nimport TestnetDAI from './abis/TestnetDAI.json'\n\nimport './App.css'\n\nimport { Header } from './components'\nimport SplashPage from './components/SplashPage'\nimport WalletButton from './components/WalletButton'\nimport SwapShare from './components/SwapShare'\nimport OpenLoans from './components/OpenLoans'\n\nimport useWeb3Modal from './hooks/useWeb3Modal'\n\n\nconst App = () => {\n  const [web3, setWeb3] = useState(null)\n  const [networkID, setNetworkID] = useState(null)\n  const [account, setAccount] = useState(null)\n  const [provider, loadWeb3Modal, logoutOfWeb3Modal] = useWeb3Modal()\n\n  const [swapShareContract, setSwapShareContract] = useState(null)\n  const [DAIContract, setDAIContract] = useState(null)\n\n  useEffect(() => {\n    if (provider != null) {\n      window.ethereum.autoRefreshOnNetworkChange = false\n\n      setNetworkID(window.ethereum.networkVersion)\n      window.ethereum.request({method: 'eth_requestAccounts'}).then((accounts) => {\n        setAccount(accounts[0])\n      })\n      setWeb3(new Web3(provider))\n    }\n  }, [provider])\n\n\n  useEffect(() => {\n    if (web3 != null) {\n      setSwapShareContract(new web3.eth.Contract(\n        SwapShareABI.abi,\n        SwapShareABI.networks[networkID].address\n      ))\n\n      setDAIContract(new web3.eth.Contract(\n        TestnetDAI.abi,\n        TestnetDAI.networks[networkID].address\n      ))\n    }\n  }, [web3])\n\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header>\n          <div className=\"ml-4\">\n            {web3 && swapShareContract && account &&\n              <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                <div style={{minWidth: '10rem'}}>\n                  <Link style={{color: 'white'}} to='/'>Your Activity</Link>\n                </div>\n                <div style={{minWidth: '5rem'}}>\n                  <Link style={{color: 'white'}} to='/open-loans'>View Open Loans</Link>\n                </div>\n              </div>\n            }\n          </div> \n  \n          <div style={{display: 'flex', alignItems: 'center'}}>\n            <div className=\"mr-4\">{account}</div>\n            <WalletButton provider={provider} loadWeb3Modal={loadWeb3Modal} logoutOfWeb3Modal={logoutOfWeb3Modal} />\n          </div>\n        </Header>\n        <Switch>\n          <Route path='/open-loans'>\n            {web3 && swapShareContract && account\n              ? <OpenLoans web3={web3} account={account} swapShareContract={swapShareContract} />\n              : <SplashPage />\n            } \n          </Route>\n          <Route path='/'>\n            {web3 && swapShareContract && account\n              ? <SwapShare web3={web3} account={account} swapShareContract={swapShareContract} DAIContract={DAIContract} />\n              : <SplashPage />\n            }\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App\n","/home/alec/swap-share/src/reportWebVitals.js",[],"/home/alec/swap-share/src/components/WalletButton.js",[],"/home/alec/swap-share/src/hooks/useWeb3Modal.js",["57"],"import { useEffect, useState } from \"react\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\n// Enter a valid infura key here to avoid being rate limited\n// You can get a key for free at https://infura.io/register\nconst INFURA_ID = \"INVALID_INFURA_KEY\";\n\nconst NETWORK_NAME = \"mainnet\";\n\nfunction useWeb3Modal(config = {}) {\n  const [web3Modal, setWeb3Modal] = useState();\n  const [provider, setProvider] = useState();\n  const { infuraId = INFURA_ID, NETWORK = NETWORK_NAME } = config;\n\n  useEffect(() => {\n    const modal = new Web3Modal({\n      network: NETWORK,\n      cacheProvider: true,\n      providerOptions: {\n        walletconnect: {\n          package: WalletConnectProvider,\n          options: {\n            infuraId,\n          },\n        },\n      },\n    })\n    setWeb3Modal(modal)\n  }, [])\n\n  // Open wallet selection modal.\n  const loadWeb3Modal = async () => {\n    let newProvider = null;\n    try {\n      newProvider = await web3Modal.connect();\n    } catch (error) {\n      // Modal was closed by user, we dont have to do anything\n    }\n\n    if (newProvider) {\n      setProvider(newProvider)\n    }\n  }\n\n  // Disconnect from wallet\n  const logoutOfWeb3Modal = async () => {\n    if (window.web3.currentProvider && window.web3.currentProvider.close) {\n      await window.web3.currentProvider.close();\n    }\n    web3Modal.clearCachedProvider();\n    window.location.reload();\n    setProvider(null);\n  }\n\n  return [provider, loadWeb3Modal, logoutOfWeb3Modal];\n}\n\nexport default useWeb3Modal;\n","/home/alec/swap-share/src/components/index.js",[],"/home/alec/swap-share/src/components/BorrowRequest.js",[],"/home/alec/swap-share/src/components/SwapShare.js",["58","59","60","61","62","63","64","65","66"],"/home/alec/swap-share/src/Constants.js",[],"/home/alec/swap-share/src/components/OpenLoans.js",["67","68"],"import React, { useEffect, useState } from 'react'\n\nimport { Container, Title } from './index'\nimport LoanCard from './LoanCard'\n\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\n\nconst OpenLoans = ({ web3, account, swapShareContract }) => {\n    const [openLoans, setOpenLoans] = useState(null)\n\n    useEffect(() => {\n        getAllOpenLoans()\n    }, [])\n\n    useEffect(() => {\n        if (openLoans && openLoans.length === 0) {\n            setOpenLoans(null)\n        }\n    }, [openLoans])\n\n    const getAllOpenLoans = () => {\n        swapShareContract.methods\n          .getAllRequests(account)\n          .call()\n          .then(result => {\n            let transactions = [];\n            result.map(value => {\n              if (value['valid']) {\n                const expiration = new Date(parseInt(value['expiration']) * 1000)\n                \n                transactions.push({\n                  'index': value['index'],\n                  'expirationDate': expiration.toDateString(),\n                  'expirationTime': expiration.toLocaleTimeString(),\n                  'daiAmount': web3.utils.fromWei(value['daiAmount'], 'ether'),\n                  'ethAmount': web3.utils.fromWei(value['ethAmount'], 'ether'),\n                  'ethPlusInterest': web3.utils.fromWei(value['ethPlusInterest'], 'ether'),\n                  'interestRate': value['interestRate'],\n                  'state': value['state']\n                })\n              }\n            })\n            setOpenLoans(transactions)\n          })\n      }\n\n      const fulfillLoan = (index, amount) => () => {\n        const ethAmount = web3.utils.toWei(amount, 'ether').toString()\n    \n        swapShareContract.methods\n          .fulfillLoan(index)\n          .send({\n            from: account,\n            value: ethAmount\n          })\n          .then(() => getAllOpenLoans())\n      }\n\n    return (\n      <Container>\n        <Col className=\"mx-auto\" md={4}>\n          <Title className=\"mb-4\">Open Loan Requests</Title>\n          {openLoans\n            ? <div>\n                {openLoans.map((value, index) => (\n                  <LoanCard data={value} index={index}>\n                    <Button variant='success' onClick={fulfillLoan(value.index, value.ethAmount)}>\n                        fulfill loan\n                    </Button>\n                  </LoanCard>\n                ))}\n                </div>\n            : <div style={{height: '10rem', display: 'flex', justifyContent: 'center', alignItems: 'center', color: '#6c757d'}}>\n                No loans to display at this time\n              </div>\n          }\n        </Col>\n      </Container>\n    )\n  }\n\nexport default OpenLoans","/home/alec/swap-share/src/components/SplashPage.js",[],"/home/alec/swap-share/src/components/LoanCard.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":58,"column":6,"nodeType":"75","endLine":58,"endColumn":12,"suggestions":"76"},{"ruleId":"73","severity":1,"message":"77","line":30,"column":6,"nodeType":"75","endLine":30,"endColumn":8,"suggestions":"78"},{"ruleId":"73","severity":1,"message":"79","line":23,"column":6,"nodeType":"75","endLine":23,"endColumn":22,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":26,"column":57,"nodeType":"83","messageId":"84","endLine":26,"endColumn":59},{"ruleId":"81","severity":1,"message":"82","line":32,"column":49,"nodeType":"83","messageId":"84","endLine":32,"endColumn":51},{"ruleId":"85","severity":1,"message":"86","line":43,"column":26,"nodeType":"87","messageId":"88","endLine":43,"endColumn":28},{"ruleId":"85","severity":1,"message":"86","line":71,"column":26,"nodeType":"87","messageId":"88","endLine":71,"endColumn":28},{"ruleId":"81","severity":1,"message":"82","line":164,"column":50,"nodeType":"83","messageId":"84","endLine":164,"endColumn":52},{"ruleId":"81","severity":1,"message":"82","line":165,"column":51,"nodeType":"83","messageId":"84","endLine":165,"endColumn":53},{"ruleId":"81","severity":1,"message":"82","line":168,"column":42,"nodeType":"83","messageId":"84","endLine":168,"endColumn":44},{"ruleId":"81","severity":1,"message":"82","line":171,"column":38,"nodeType":"83","messageId":"84","endLine":171,"endColumn":40},{"ruleId":"73","severity":1,"message":"89","line":14,"column":8,"nodeType":"75","endLine":14,"endColumn":10,"suggestions":"90"},{"ruleId":"85","severity":1,"message":"86","line":28,"column":30,"nodeType":"87","messageId":"88","endLine":28,"endColumn":32},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'networkID'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSwapShareContract' needs the current value of 'networkID'.","ArrayExpression",["93"],"React Hook useEffect has missing dependencies: 'NETWORK' and 'infuraId'. Either include them or remove the dependency array.",["94"],"React Hook useEffect has missing dependencies: 'getAddressBorrows' and 'getAddressFulfilledLoans'. Either include them or remove the dependency array.",["95"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'getAllOpenLoans'. Either include it or remove the dependency array.",["96"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},"Update the dependencies array to be: [networkID, web3]",{"range":"105","text":"106"},"Update the dependencies array to be: [NETWORK, infuraId]",{"range":"107","text":"108"},"Update the dependencies array to be: [getAddressBorrows, getAddressFulfilledLoans, updateRequests]",{"range":"109","text":"110"},"Update the dependencies array to be: [getAllOpenLoans]",{"range":"111","text":"112"},[1575,1581],"[networkID, web3]",[850,852],"[NETWORK, infuraId]",[712,728],"[getAddressBorrows, getAddressFulfilledLoans, updateRequests]",[384,386],"[getAllOpenLoans]"]