[{"/home/alec/swap-share/src/index.js":"1","/home/alec/swap-share/src/App.js":"2","/home/alec/swap-share/src/reportWebVitals.js":"3","/home/alec/swap-share/src/components/WalletButton.js":"4","/home/alec/swap-share/src/components/Escrow.js":"5","/home/alec/swap-share/src/hooks/useWeb3Modal.js":"6","/home/alec/swap-share/src/components/index.js":"7","/home/alec/swap-share/src/components/BorrowRequest.js":"8"},{"size":571,"mtime":1609368651983,"results":"9","hashOfConfig":"10"},{"size":2060,"mtime":1609368644419,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1608155728010,"results":"12","hashOfConfig":"10"},{"size":402,"mtime":1608235219011,"results":"13","hashOfConfig":"10"},{"size":3730,"mtime":1609376334301,"results":"14","hashOfConfig":"10"},{"size":1420,"mtime":1608789385191,"results":"15","hashOfConfig":"10"},{"size":1021,"mtime":1608790748949,"results":"16","hashOfConfig":"10"},{"size":4253,"mtime":1609368525159,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1yv57jw",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"/home/alec/swap-share/src/index.js",[],["37","38"],"/home/alec/swap-share/src/App.js",["39"],"import React, { useEffect, useState } from 'react'\nimport Web3 from 'web3'\n\nimport EscrowABI from './abis/Escrow.json'\nimport TestnetDAI from './abis/TestnetDAI.json'\n\nimport './App.css'\nimport logo from './logo.svg'\n\nimport { Header, Body } from './components'\nimport WalletButton from './components/WalletButton'\nimport Escrow from './components/Escrow'\n\nimport useWeb3Modal from './hooks/useWeb3Modal'\n\n\nconst App = () => {\n  const [web3, setWeb3] = useState(null)\n  const [networkID, setNetworkID] = useState(null)\n  const [account, setAccount] = useState(null)\n  const [provider, loadWeb3Modal, logoutOfWeb3Modal] = useWeb3Modal()\n\n  const [escrowContract, setEscrowContract] = useState(null)\n  const [DAIContract, setDAIContract] = useState(null)\n\n  useEffect(() => {\n    if (provider != null) {\n      window.ethereum.autoRefreshOnNetworkChange = false\n\n      setNetworkID(window.ethereum.networkVersion)\n      window.ethereum.request({method: 'eth_requestAccounts'}).then((accounts) => {\n        setAccount(accounts[0])\n      })\n      setWeb3(new Web3(provider))\n    }\n  }, [provider])\n\n\n  useEffect(() => {\n    if (web3 != null) {\n      setEscrowContract(new web3.eth.Contract(\n        EscrowABI.abi,\n        EscrowABI.networks[networkID].address\n      ))\n\n      setDAIContract(new web3.eth.Contract(\n        TestnetDAI.abi,\n        TestnetDAI.networks[networkID].address\n      ))\n    }\n  }, [web3])\n\n\n  return (\n    <div className=\"App\">\n      <Header>\n        <div className=\"mr-2\">{account}</div>\n        <WalletButton provider={provider} loadWeb3Modal={loadWeb3Modal} logoutOfWeb3Modal={logoutOfWeb3Modal} />\n      </Header>\n      {web3 && escrowContract && account\n        ? <Escrow web3={web3} account={account} escrowContract={escrowContract} DAIContract={DAIContract} />\n        : <Body>\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <div style={{fontSize: '2rem'}}>SwapShare</div>\n            <div>A direct peer-to-peer crypto lending service</div>\n          </Body>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","/home/alec/swap-share/src/reportWebVitals.js",[],"/home/alec/swap-share/src/components/WalletButton.js",[],"/home/alec/swap-share/src/components/Escrow.js",["40","41","42"],"/home/alec/swap-share/src/hooks/useWeb3Modal.js",[],"/home/alec/swap-share/src/components/index.js",[],"/home/alec/swap-share/src/components/BorrowRequest.js",["43"],"import React, { useState } from 'react'\nimport Flatpickr from \"react-flatpickr\"\nimport BigNumber from \"bignumber.js\"\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst BorrowRequest = ({ account, escrowContract, daiContract, setUpdateRequests }) => {\n    const [validated, setValidated] = useState(false)\n    const [approved, setApproved] = useState(false)\n    const approvalAmount = new BigNumber('1000e+18').toFixed()\n\n    const [daiAmount, setDaiAmount] = useState('')\n    const [ethAmount, setEthAmount] = useState('')\n    const [expirationDate, setExpirationDate] = useState(null)\n    const [interestRate, setInterestRate] = useState('')\n\n    const handleSubmit = (event) => {\n        const form = event.currentTarget;\n\n        if (form.checkValidity() === false) {\n          event.stopPropagation();\n        } else {\n            setValidated(true);\n            submitBorrowRequest()\n        }\n\n        event.preventDefault()\n      };\n\n    const handleChange = setFunc => e => {\n        setFunc(e.target.value)\n    }\n\n    function submitBorrowRequest() {\n        let amountToSend = new BigNumber(`${daiAmount}e+18`).toString()\n        let ethRequested = new BigNumber(`${ethAmount}e+18`).toString()\n\n        if (approved) {\n            sendDAI(expirationDate, amountToSend, ethRequested, interestRate)\n        } else {\n            daiContract.methods\n            .approve(escrowContract._address, approvalAmount)\n            .send({from: account})\n            .then(() => {\n                setApproved(true)\n                sendDAI(expirationDate, amountToSend, ethRequested, interestRate)\n            })\n            .catch(e => console.error(e))\n        }\n    }\n\n    function sendDAI(expiration, amount, ethRequested, interestRate) {\n        escrowContract.methods\n            .borrowerCollateralDeposit(expiration, amount, ethRequested, interestRate)\n            .send({from: account})\n            .then(() => setUpdateRequests(true))\n    }\n\n    return (\n        <Form className=\"pt-4\" noValidate validated={validated} onSubmit={handleSubmit} style={{display: 'flex', flexDirection: 'column'}}>\n            <Form.Label>Create a Borrow Request</Form.Label>\n\n            <Form.Group>\n                <Form.Text className=\"text-muted\">ETH to request</Form.Text>\n                <Form.Control placeholder=\"ETH amount\" value={ethAmount} onChange={handleChange(setEthAmount)} required />\n                <Form.Control.Feedback type=\"invalid\">\n                    Please specify ETH.\n                </Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Text className=\"text-muted\">DAI to store as collateral</Form.Text>\n                <Form.Control placeholder=\"DAI amount\" value={daiAmount} onChange={handleChange(setDaiAmount)} required />\n                <Form.Control.Feedback type=\"invalid\">\n                    Please specify DAI.\n                </Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Text className=\"text-muted\">Interest rate that you will borrow at</Form.Text>\n                <Form.Control placeholder=\"Interest rate\" value={interestRate} onChange={handleChange(setInterestRate)} required />\n                <Form.Control.Feedback type=\"invalid\">\n                    Please specify an interest rate\n                </Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Text className=\"text-muted\">Date and time that loan must be paid by</Form.Text>\n                <Flatpickr className=\"mt-2\"\n                    options={{ \n                        minDate: \"2017-01-01\",\n                        enableTime: true,\n                        dateFormat: \"M d, Y  h:i K\",\n                        defaultDate: \"today\",\n                        minDate: \"today\" \n                    }}\n                    onChange={date => {\n                        let utcTimestamp = date[0].getTime() / 1000\n                        setExpirationDate(utcTimestamp)\n                    }}\n                />\n            </Form.Group>\n\n            <Button className=\"mt-2\" variant=\"light\" type=\"submit\">Submit</Button>\n        </Form>\n    );\n  }\n\nexport default BorrowRequest",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":51,"column":6,"nodeType":"50","endLine":51,"endColumn":12,"suggestions":"51"},{"ruleId":"48","severity":1,"message":"52","line":20,"column":6,"nodeType":"50","endLine":20,"endColumn":22,"suggestions":"53"},{"ruleId":"54","severity":1,"message":"55","line":23,"column":57,"nodeType":"56","messageId":"57","endLine":23,"endColumn":59},{"ruleId":"58","severity":1,"message":"59","line":34,"column":26,"nodeType":"60","messageId":"61","endLine":34,"endColumn":28},{"ruleId":"62","severity":1,"message":"63","line":96,"column":25,"nodeType":"64","messageId":"57","endLine":96,"endColumn":32},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'networkID'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setEscrowContract' needs the current value of 'networkID'.","ArrayExpression",["67"],"React Hook useEffect has a missing dependency: 'getBorrowTransactions'. Either include it or remove the dependency array.",["68"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-dupe-keys","Duplicate key 'minDate'.","ObjectExpression","no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},{"desc":"71","fix":"72"},"Update the dependencies array to be: [networkID, web3]",{"range":"73","text":"74"},"Update the dependencies array to be: [getBorrowTransactions, updateRequests]",{"range":"75","text":"76"},[1400,1406],"[networkID, web3]",[531,547],"[getBorrowTransactions, updateRequests]"]