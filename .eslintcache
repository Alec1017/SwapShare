[{"/home/alec/swap-share/src/index.js":"1","/home/alec/swap-share/src/App.js":"2","/home/alec/swap-share/src/reportWebVitals.js":"3","/home/alec/swap-share/src/components/WalletButton.js":"4","/home/alec/swap-share/src/hooks/useWeb3Modal.js":"5","/home/alec/swap-share/src/components/index.js":"6","/home/alec/swap-share/src/components/BorrowRequest.js":"7","/home/alec/swap-share/src/components/SwapShare.js":"8","/home/alec/swap-share/src/Constants.js":"9","/home/alec/swap-share/src/components/OpenLoans.js":"10","/home/alec/swap-share/src/components/SplashPage.js":"11","/home/alec/swap-share/src/components/LoanCard.js":"12"},{"size":562,"mtime":1609975963215,"results":"13","hashOfConfig":"14"},{"size":3875,"mtime":1610009043380,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1608155728010,"results":"16","hashOfConfig":"14"},{"size":402,"mtime":1608235219011,"results":"17","hashOfConfig":"14"},{"size":1552,"mtime":1609992311231,"results":"18","hashOfConfig":"14"},{"size":1542,"mtime":1609992252930,"results":"19","hashOfConfig":"14"},{"size":4270,"mtime":1609990477775,"results":"20","hashOfConfig":"14"},{"size":6859,"mtime":1610009988202,"results":"21","hashOfConfig":"14"},{"size":358,"mtime":1610007893851,"results":"22","hashOfConfig":"14"},{"size":2682,"mtime":1609974041913,"results":"23","hashOfConfig":"14"},{"size":370,"mtime":1609973857836,"results":"24","hashOfConfig":"14"},{"size":1988,"mtime":1609982150081,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1yv57jw",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/alec/swap-share/src/index.js",[],["53","54"],"/home/alec/swap-share/src/App.js",["55","56"],"/home/alec/swap-share/src/reportWebVitals.js",[],"/home/alec/swap-share/src/components/WalletButton.js",[],"/home/alec/swap-share/src/hooks/useWeb3Modal.js",["57"],"import { useEffect, useState } from \"react\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\n// Enter a valid infura key here to avoid being rate limited\n// You can get a key for free at https://infura.io/register\nconst INFURA_ID = \"INVALID_INFURA_KEY\";\n\nconst NETWORK_NAME = \"mainnet\";\n\nfunction useWeb3Modal(config = {}) {\n  const [web3Modal, setWeb3Modal] = useState();\n  const [provider, setProvider] = useState();\n  const { infuraId = INFURA_ID, NETWORK = NETWORK_NAME } = config;\n\n  useEffect(() => {\n    const modal = new Web3Modal({\n      network: NETWORK,\n      cacheProvider: true,\n      providerOptions: {\n        walletconnect: {\n          package: WalletConnectProvider,\n          options: {\n            infuraId,\n          },\n        },\n      },\n    })\n    setWeb3Modal(modal)\n  }, [])\n\n  // Open wallet selection modal.\n  const loadWeb3Modal = async () => {\n    let newProvider = null;\n    try {\n      newProvider = await web3Modal.connect();\n    } catch (error) {\n      // Modal was closed by user, we dont have to do anything\n    }\n\n    if (newProvider) {\n      setProvider(newProvider)\n    }\n  }\n\n  // Disconnect from wallet\n  const logoutOfWeb3Modal = async () => {\n    if (window.web3.currentProvider && window.web3.currentProvider.close) {\n      await window.web3.currentProvider.close();\n    }\n    web3Modal.clearCachedProvider();\n    window.location.reload();\n    setProvider(null);\n  }\n\n  return [provider, loadWeb3Modal, logoutOfWeb3Modal];\n}\n\nexport default useWeb3Modal;\n","/home/alec/swap-share/src/components/index.js",[],"/home/alec/swap-share/src/components/BorrowRequest.js",[],"/home/alec/swap-share/src/components/SwapShare.js",["58","59","60","61","62","63","64","65","66","67"],"/home/alec/swap-share/src/Constants.js",[],"/home/alec/swap-share/src/components/OpenLoans.js",["68","69"],"import React, { useEffect, useState } from 'react'\n\nimport { Container, Title } from './index'\nimport LoanCard from './LoanCard'\n\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\n\nconst OpenLoans = ({ web3, account, swapShareContract }) => {\n    const [openLoans, setOpenLoans] = useState(null)\n\n    useEffect(() => {\n        getAllOpenLoans()\n    }, [])\n\n    useEffect(() => {\n        if (openLoans && openLoans.length === 0) {\n            setOpenLoans(null)\n        }\n    }, [openLoans])\n\n    const getAllOpenLoans = () => {\n        swapShareContract.methods\n          .getAllRequests(account)\n          .call()\n          .then(result => {\n            let transactions = [];\n            result.map(value => {\n              if (value['valid']) {\n                const expiration = new Date(parseInt(value['expiration']) * 1000)\n                \n                transactions.push({\n                  'index': value['index'],\n                  'expirationDate': expiration.toDateString(),\n                  'expirationTime': expiration.toLocaleTimeString(),\n                  'daiAmount': web3.utils.fromWei(value['daiAmount'], 'ether'),\n                  'ethAmount': web3.utils.fromWei(value['ethAmount'], 'ether'),\n                  'ethPlusInterest': web3.utils.fromWei(value['ethPlusInterest'], 'ether'),\n                  'interestRate': value['interestRate'],\n                  'state': value['state']\n                })\n              }\n            })\n            setOpenLoans(transactions)\n          })\n      }\n\n      const fulfillLoan = (index, amount) => () => {\n        const ethAmount = web3.utils.toWei(amount, 'ether').toString()\n    \n        swapShareContract.methods\n          .fulfillLoan(index)\n          .send({\n            from: account,\n            value: ethAmount\n          })\n          .then(() => getAllOpenLoans())\n      }\n\n    return (\n      <Container>\n        <Col className=\"mx-auto\" md={4}>\n          <Title className=\"mb-4\">Open Loan Requests</Title>\n          {openLoans\n            ? <div>\n                {openLoans.map((value, index) => (\n                  <LoanCard data={value} index={index}>\n                    <Button variant='success' onClick={fulfillLoan(value.index, value.ethAmount)}>\n                        fulfill loan\n                    </Button>\n                  </LoanCard>\n                ))}\n                </div>\n            : <div style={{height: '10rem', display: 'flex', justifyContent: 'center', alignItems: 'center', color: '#6c757d'}}>\n                No loans to display at this time\n              </div>\n          }\n        </Col>\n      </Container>\n    )\n  }\n\nexport default OpenLoans","/home/alec/swap-share/src/components/SplashPage.js",[],"/home/alec/swap-share/src/components/LoanCard.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":38,"column":51,"nodeType":"76","messageId":"77","endLine":38,"endColumn":53},{"ruleId":"78","severity":1,"message":"79","line":72,"column":6,"nodeType":"80","endLine":72,"endColumn":12,"suggestions":"81"},{"ruleId":"78","severity":1,"message":"82","line":30,"column":6,"nodeType":"80","endLine":30,"endColumn":8,"suggestions":"83"},{"ruleId":"78","severity":1,"message":"84","line":24,"column":6,"nodeType":"80","endLine":24,"endColumn":15,"suggestions":"85"},{"ruleId":"78","severity":1,"message":"86","line":32,"column":6,"nodeType":"80","endLine":32,"endColumn":22,"suggestions":"87"},{"ruleId":"74","severity":1,"message":"75","line":35,"column":57,"nodeType":"76","messageId":"77","endLine":35,"endColumn":59},{"ruleId":"74","severity":1,"message":"75","line":41,"column":49,"nodeType":"76","messageId":"77","endLine":41,"endColumn":51},{"ruleId":"88","severity":1,"message":"89","line":52,"column":26,"nodeType":"90","messageId":"91","endLine":52,"endColumn":28},{"ruleId":"88","severity":1,"message":"89","line":80,"column":26,"nodeType":"90","messageId":"91","endLine":80,"endColumn":28},{"ruleId":"74","severity":1,"message":"75","line":173,"column":50,"nodeType":"76","messageId":"77","endLine":173,"endColumn":52},{"ruleId":"74","severity":1,"message":"75","line":174,"column":51,"nodeType":"76","messageId":"77","endLine":174,"endColumn":53},{"ruleId":"74","severity":1,"message":"75","line":177,"column":42,"nodeType":"76","messageId":"77","endLine":177,"endColumn":44},{"ruleId":"74","severity":1,"message":"75","line":180,"column":38,"nodeType":"76","messageId":"77","endLine":180,"endColumn":40},{"ruleId":"78","severity":1,"message":"92","line":14,"column":8,"nodeType":"80","endLine":14,"endColumn":10,"suggestions":"93"},{"ruleId":"88","severity":1,"message":"89","line":28,"column":30,"nodeType":"90","messageId":"91","endLine":28,"endColumn":32},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'networkID'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSwapShareContract' needs the current value of 'networkID'.","ArrayExpression",["96"],"React Hook useEffect has missing dependencies: 'NETWORK' and 'infuraId'. Either include them or remove the dependency array.",["97"],"React Hook useEffect has missing dependencies: 'getAddressBorrows', 'getAddressFulfilledLoans', and 'updateRequests'. Either include them or remove the dependency array.",["98"],"React Hook useEffect has missing dependencies: 'getAddressBorrows' and 'getAddressFulfilledLoans'. Either include them or remove the dependency array.",["99"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'getAllOpenLoans'. Either include it or remove the dependency array.",["100"],"no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [networkID, web3]",{"range":"111","text":"112"},"Update the dependencies array to be: [NETWORK, infuraId]",{"range":"113","text":"114"},"Update the dependencies array to be: [account, getAddressBorrows, getAddressFulfilledLoans, updateRequests]",{"range":"115","text":"116"},"Update the dependencies array to be: [getAddressBorrows, getAddressFulfilledLoans, updateRequests]",{"range":"117","text":"118"},"Update the dependencies array to be: [getAllOpenLoans]",{"range":"119","text":"120"},[1996,2002],"[networkID, web3]",[850,852],"[NETWORK, infuraId]",[738,747],"[account, getAddressBorrows, getAddressFulfilledLoans, updateRequests]",[897,913],"[getAddressBorrows, getAddressFulfilledLoans, updateRequests]",[384,386],"[getAllOpenLoans]"]